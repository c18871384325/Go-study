1.函数
    一串代码的集合,对代码进行封装

    func name(parameters) (return) {
        code
    }

        parameters: 多个
            多个连续的参数类型统一,保留最后一个参数的类型即可,前面的参数类型可省略
        return: 多个
            可以为零个和多个,一个返回可省略括号,多个用括号包裹返回值名及类型,
            return不能省略
        name: 函数名
        { } :函数内封装的代码
        func: 申明函数
    
    递归：
        函数直接或间接的调用自己(终止条件必须，否则无限循环)
        解决分治问题，将一个大的问题分解为小的问题
    
    函数的类型：
        参数与返回值的类型及为该函数的类型
        可以将函数通过返回值传递给调用者
        定义一个函数类型的变量
            var name func (value, int) int
    
    匿名函数：
        在函数内部定义的内部函数，使用外部函数的一些变量，并且因为内部函数的生命周期延长而占用外部函数
    
    延时执行：
        defer：声明的函数在外部函数退出时执行，无论外部函数执行是否发生错误（错误必须在defer声明之后）

        func name() {
            defer func() {
                fmt.Println("defer error)
            }
            fmt.Println("demo")
        } 
    
    错误处理：
        panic: 抛出错误panic错误
        recover: 自定义处理error，必须卸载defer函数中
    

2.package
    GOPATH
    一个文件夹下的文件，就是Go语言中的package，通过package来声明包，同一个文件夹下的包名必须一致
    在实际中主要用的 GoMode方式

    

